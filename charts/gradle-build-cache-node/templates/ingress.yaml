{{- if .Values.ingress.enabled }}
{{- $ingressApiIsStable := eq (include "gradle-build-cache-node.ingress.isStable" .) "true" -}}
{{- $ingressSupportsIngressClassName := eq (include "gradle-build-cache-node.ingress.supportsIngressClassName" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "gradle-build-cache-node.ingress.supportsPathType" .) "true" -}}
{{- $ingressPathType := .Values.ingress.pathType | default "ImplementationSpecific" -}}
apiVersion: {{ include "gradle-build-cache-node.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "gradle-build-cache-node.fullname" . }}
  labels:
    app: {{ template "gradle-build-cache-node.name" . }}
    chart: {{ template "gradle-build-cache-node.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  {{- if and $ingressSupportsIngressClassName .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host | quote }}
    http:
      paths:
      - path: {{ .Values.ingress.path }}
        {{- if $ingressSupportsPathType }}
        pathType: {{ $ingressPathType }}
        {{- end }}
        backend:
          {{- if $ingressApiIsStable }}
          service:
            name: {{ template "gradle-build-cache-node.fullname" . }}
            port:
              number: {{ .Values.service.externalPort }}
          {{- else }}
        serviceName: {{ template "gradle-build-cache-node.fullname" . }}
        servicePort: {{ .Values.service.externalPort }}
          {{- end }}
{{- if .Values.ingress.tls }}
  tls:
{{ tpl (toYaml .Values.ingress.tls) $ | indent 4 }}
{{- end }}
{{- end }}
