nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: gradle/build-cache-node
  tag: "10.0"
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

existingConfigMap: false


## ref: https://docs.gradle.com/build-cache-node/#editing_the_file

config:
  targetSize: 10000
  maxArtifactSize: 10000
  maxEntryAgeInHours: null

  gradleEnterprice:
    enabled: false
    serverAddress: "https://ge-hostname"
    nodeAddress: "https://node-hostname"
    key: "key"
    secret: "secret"

  anonymousLevel: "read"

  # apiUsers:
  #   ci-user:
  #     level: "readwrite"
  #     # default is "ci-password1!"
  #     # learn how to generate password here https://docs.gradle.com/build-cache-node/#generating_password_hashes
  #     password: "LDHYISwPRAyrCfQ3a86bBbtB8LnKpwXBGd9+8AQFm5g=:Pcib4sr6T6Qc8ZInOtZpuoUzOKbLAu2MnoG94wXuTIk="
  #     note: "Continuous Integration User"
  uiAccess:
    type: "open"
    # username: "ui-user"
    # # default is "ui-password1!"
    # # learn how to generate password here https://docs.gradle.com/build-cache-node/#generating_password_hashes
    # # don't forget to change health check basic auth if you change ui password
    # password: "YYVqr2LimU9hAtEmV0KkNdLpZj+Hi/7Nxn8oiDGeApY=:PUcWMcVblpMs1Ug4s4sBdmNrl7cnja0MsX/sSk/80D0="

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 1Gi
  # requests:
  #   cpu: 100m
  #   memory: 1Gi

terminationGracePeriodSeconds: 10

service:
  type: NodePort
  externalPort: 80

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  path: /

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  host: chart-example.local

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 10
  httpGet:
    path: /
    port: http
    # httpHeaders:
    #   - name: Authorization
    #     # base64 encoded value of "ui-user:ui-password"
    #     value: Basic dWktdXNlcjp1aS1wYXNzd29yZDEh

readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  httpGet:
    path: /
    port: http
    # httpHeaders:
    #   - name: Authorization
    #     # base64 encoded value of "ui-user:ui-password"
    #     value: Basic dWktdXNlcjp1aS1wYXNzd29yZDEh

extraVolumes: []

extraVolumeMounts: []

## Pod affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
podAntiAffinity: soft
podAntiAffinityTopologyKey: "kubernetes.io/hostname"


persistence:
  enabled: false
  ## Set annotations on pvc
  annotations: {}

  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  # accessMode: ReadWriteOnce
  # size: 10Gi
