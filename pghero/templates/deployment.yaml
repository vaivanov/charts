apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "pghero.fullname" . }}
  labels:
{{ include "pghero.labels" . | indent 4 }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{ toYaml .Values.deploymentAnnotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "pghero.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "pghero.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.podLabels }}
          {{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
          {{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      {{- if or .Values.extraVolumes .Values.config }}
      volumes:
        {{- if .Values.config }}
        - name: configmap
          configMap:
            defaultMode: 0644
            name: {{ template "pghero.fullname" . }}
        {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | indent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{ toYaml .Values.command | indent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{ toYaml .Values.args | indent 12 }}
          {{- end }}
          {{- if or .Values.extraVolumeMounts .Values.config }}
          {{- if .Values.config }}
          volumeMounts:
            - name: configmap
              mountPath: /app/config/pghero.yml
              readOnly: true
              subPath: pghero.yml
          {{- end }}
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | indent 12 }}
            {{- end }}
          {{- end }}
          {{- if or .Values.databaseUrl .Values.existingSecret .Values.envVars }}
          env:
          {{- if or .Values.databaseUrl .Values.existingSecret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "pghero.secretName" . }}
                  key: {{ template "pghero.existingSecretKey" . }}
          {{- end }}
            {{- if .Values.envVars }}
              {{ toYaml .Values.envVars | indent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{ toYaml .Values.envFrom | indent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.periodSeconds }}
            periodSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.periodSeconds }}
            periodSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{ toYaml . | indent 12 }}
          {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}